datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String    @id
  name        String
  email       String
  avatar      String?
  files       File[]
  media       Media[]
  albums      Album[]
  plan        Plans     @default(LITE)
  contacts    Contact[]
  createdDate DateTime  @default(now())
  updatedDate DateTime  @default(now())
}

model File {
  id         String   @id @unique @default(uuid())
  name       String
  path       String
  size       Int
  extention  String
  usedIn     Album[]
  uploadById String
  uploadBy   User     @relation(fields: [uploadById], references: [id])
  uploadDate DateTime @default(now())

  @@index([uploadById])
}

model Media {
  id           String   @id @unique @default(uuid())
  name         String
  path         String   @unique
  author       String?
  description  String?
  size         Int
  isHero       Album[]  @relation("hero-image")
  isCover      Album[]  @relation("cover-image")
  isPromo      Album[]  @relation("promo-image")
  isBackground Album[]  @relation("background-image")
  uploadBy     User     @relation(fields: [uploadById], references: [id], onDelete: Cascade)
  uploadById   String
  uploadDate   DateTime @default(now())

  @@index([uploadById])
}

model Album {
  id                  String      @id @unique @default(uuid())
  secret              String
  artistName          String
  artistSlug          String
  albumName           String
  albumSlug           String
  releaseDate         String
  label               String
  genre               String
  description         String
  player              Player
  playerSoundcloud    String?
  playerSpotify       String?
  youtubeVideos       String?
  contact             Contact[]
  imageHero           Media       @relation(fields: [imageHeroPath], references: [path], name: "hero-image", onDelete: SetDefault)
  imageHeroPath       String      @default("https://dfkoxxzioobmrfcznrnc.supabase.co/storage/v1/object/public/public/default/band_default.png")
  imageCover          Media       @relation(fields: [imageCoverPath], references: [path], name: "cover-image", onDelete: SetDefault)
  imageCoverPath      String      @default("https://dfkoxxzioobmrfcznrnc.supabase.co/storage/v1/object/public/public/default/cover_default.png")
  imagesPromo         Media[]     @relation("promo-image")
  imageBackground     Media?      @relation(fields: [imageBackgroundPath], references: [path], name: "background-image", onDelete: SetNull)
  imageBackgroundPath String?
  files               File[]
  customColor         String?
  tourName            String?
  tourDescription     String?
  tourLink            String?
  tourLinkDisplayName String?
  tourImage           String?
  linkSpotify         String?
  linkSoundcloud      String?
  linkYoutube         String?
  linkFacebook        String?
  linkInstagram       String?
  linkTiktok          String?
  linkTwitter         String?
  displayMode         DisplayMode
  createdBy           User        @relation(fields: [createdById], references: [id])
  createdById         String
  createdDate         DateTime    @default(now())

  @@index([imageHeroPath])
  @@index([imageCoverPath])
  @@index([createdById])
}

model Contact {
  id          String  @id @unique @default(uuid())
  name        String
  role        String
  phone       String?
  email       String
  connectWith Album?  @relation(fields: [albumId], references: [id])
  albumId     String?
  createdBy   User    @relation(onDelete: Cascade, fields: [createdById], references: [id])
  createdById String
}

enum Player {
  SPOTIFY
  SOUNDCLOUD
}

enum DisplayMode {
  LIGHT
  DARK
}

enum Plans {
  LITE
  BASIC
  PRO
}
